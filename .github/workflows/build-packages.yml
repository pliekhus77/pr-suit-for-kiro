name: Build and Publish NuGet Packages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-and-publish:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: 'latest'
      
      - name: Extract version from tag
        id: version
        shell: pwsh
        run: |
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $version = "${{ github.event.inputs.version }}"
          } else {
            $version = "${{ github.ref_name }}" -replace '^v', ''
          }
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT
          Write-Host "Package version: $version"
      
      - name: Build packages
        shell: pwsh
        run: |
          .\build\Build-Packages.ps1 -Version "${{ steps.version.outputs.VERSION }}"
      
      - name: Validate packages
        shell: pwsh
        run: |
          .\build\Validate-Packages.ps1
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: artifacts/packages/*.nupkg
          retention-days: 90
      
      - name: Publish to NuGet.org
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        shell: pwsh
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          if ([string]::IsNullOrEmpty($env:NUGET_API_KEY)) {
            Write-Host "WARNING: NUGET_API_KEY secret not set. Skipping publish." -ForegroundColor Yellow
            exit 0
          }
          
          Get-ChildItem -Path artifacts/packages/*.nupkg | ForEach-Object {
            Write-Host "Publishing $($_.Name)..." -ForegroundColor Cyan
            nuget push $_.FullName -Source https://api.nuget.org/v3/index.json -ApiKey $env:NUGET_API_KEY -SkipDuplicate
            
            if ($LASTEXITCODE -ne 0) {
              Write-Host "Failed to publish $($_.Name)" -ForegroundColor Red
              exit 1
            }
          }
          
          Write-Host "All packages published successfully!" -ForegroundColor Green
