{
  "name": "pragmatic-rhino-suit",
  "displayName": "Pragmatic Rhino SUIT",
  "description": "Standards-Unified Integration Toolkit - SUIT Up. Standardize. Ship It.",
  "version": "0.1.0",
  "publisher": "pragmatic-rhino",
  "author": "Patrick Liekhus",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/pliekhus77/pr-suit-for-kiro"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "kiro",
    "framework",
    "steering",
    "best-practices",
    "tdd",
    "bdd",
    "architecture"
  ],
  "icon": "resources/icon.png",
  "activationEvents": [
    "workspaceContains:.kiro/"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "agentic-reviewer.browseFrameworks",
        "title": "Browse Frameworks",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(library)"
      },
      {
        "command": "agentic-reviewer.installFramework",
        "title": "Install Framework",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(cloud-download)"
      },
      {
        "command": "agentic-reviewer.updateFramework",
        "title": "Update Framework",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(sync)"
      },
      {
        "command": "agentic-reviewer.updateAllFrameworks",
        "title": "Update All Frameworks",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(sync-ignored)"
      },
      {
        "command": "agentic-reviewer.removeFramework",
        "title": "Remove Framework",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(trash)"
      },
      {
        "command": "agentic-reviewer.createCustomSteering",
        "title": "Create Custom Steering",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(new-file)"
      },
      {
        "command": "agentic-reviewer.validateSteering",
        "title": "Validate Steering Document",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(check)"
      },
      {
        "command": "agentic-reviewer.renameCustomSteering",
        "title": "Rename",
        "category": "Pragmatic Rhino SUIT"
      },
      {
        "command": "agentic-reviewer.deleteCustomSteering",
        "title": "Delete",
        "category": "Pragmatic Rhino SUIT"
      },
      {
        "command": "agentic-reviewer.exportCustomSteering",
        "title": "Export to Library",
        "category": "Pragmatic Rhino SUIT"
      },
      {
        "command": "agentic-reviewer.initializeWorkspace",
        "title": "Initialize Workspace",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(folder-opened)"
      },
      {
        "command": "agentic-reviewer.searchFrameworks",
        "title": "Search Frameworks",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(search)"
      },
      {
        "command": "agentic-reviewer.viewFrameworkReference",
        "title": "View Framework Reference",
        "category": "Pragmatic Rhino SUIT"
      },
      {
        "command": "agentic-reviewer.initializeFrameworksDirectory",
        "title": "Initialize Frameworks Directory",
        "category": "Pragmatic Rhino SUIT"
      },
      {
        "command": "agentic-reviewer.refreshSteeringTree",
        "title": "Refresh",
        "category": "Pragmatic Rhino SUIT",
        "icon": "$(refresh)"
      },
      {
        "command": "agentic-reviewer.openSteeringDocument",
        "title": "Open",
        "category": "Pragmatic Rhino SUIT"
      },
      {
        "command": "agentic-reviewer.revealSteeringDocument",
        "title": "Reveal in File Explorer",
        "category": "Pragmatic Rhino SUIT"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "pragmaticRhinoSuit.steeringTree",
          "name": "Framework Steering",
          "when": "pragmaticRhinoSuit.activated"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "pragmaticRhinoSuit.steeringTree",
        "contents": "No framework steering documents found.\n[Browse Frameworks](command:agentic-reviewer.browseFrameworks)\n[Initialize Workspace](command:agentic-reviewer.initializeWorkspace)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "agentic-reviewer.refreshSteeringTree",
          "when": "view == pragmaticRhinoSuit.steeringTree",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "agentic-reviewer.openSteeringDocument",
          "when": "view == pragmaticRhinoSuit.steeringTree && viewItem =~ /^steering(Strategy|Project|Custom)$/",
          "group": "navigation@1"
        },
        {
          "command": "agentic-reviewer.revealSteeringDocument",
          "when": "view == pragmaticRhinoSuit.steeringTree && viewItem =~ /^steering(Strategy|Project|Custom)$/",
          "group": "navigation@2"
        },
        {
          "command": "agentic-reviewer.updateFramework",
          "when": "view == pragmaticRhinoSuit.steeringTree && viewItem == steeringStrategy",
          "group": "framework@1"
        },
        {
          "command": "agentic-reviewer.removeFramework",
          "when": "view == pragmaticRhinoSuit.steeringTree && viewItem == steeringStrategy",
          "group": "framework@2"
        },
        {
          "command": "agentic-reviewer.renameCustomSteering",
          "when": "view == pragmaticRhinoSuit.steeringTree && viewItem == steeringCustom",
          "group": "custom@1"
        },
        {
          "command": "agentic-reviewer.deleteCustomSteering",
          "when": "view == pragmaticRhinoSuit.steeringTree && viewItem == steeringCustom",
          "group": "custom@2"
        },
        {
          "command": "agentic-reviewer.exportCustomSteering",
          "when": "view == pragmaticRhinoSuit.steeringTree && viewItem == steeringCustom",
          "group": "custom@3"
        }
      ],
      "commandPalette": [
        {
          "command": "agentic-reviewer.refreshSteeringTree",
          "when": "false"
        },
        {
          "command": "agentic-reviewer.openSteeringDocument",
          "when": "false"
        },
        {
          "command": "agentic-reviewer.revealSteeringDocument",
          "when": "false"
        },
        {
          "command": "agentic-reviewer.renameCustomSteering",
          "when": "false"
        },
        {
          "command": "agentic-reviewer.deleteCustomSteering",
          "when": "false"
        },
        {
          "command": "agentic-reviewer.exportCustomSteering",
          "when": "false"
        }
      ]
    }
  },
  "scripts": {
    "prepare": "husky",
    "vscode:prepublish": "npm run package",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:coverage:watch": "jest --coverage --watch",
    "test:coverage:ci": "jest --coverage --ci --maxWorkers=2",
    "coverage:report": "nyc report --reporter=text --reporter=html --reporter=lcov",
    "coverage:check": "jest --coverage --coverageReporters=text-summary --passWithNoTests",
    "test:integration": "node ./out/test/runTest.js",
    "test:bdd": "cucumber-js",
    "test:bdd:ci": "cucumber-js --profile ci",
    "test:bdd:debug": "cucumber-js --profile debug",
    "test:bdd:watch": "nodemon --watch tests/bdd --ext feature,ts --exec npm run test:bdd",
    "playwright:install": "playwright install",
    "prepare": "husky"
  },
  "devDependencies": {
    "@cucumber/cucumber": "^12.2.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@playwright/test": "^1.55.1",
    "@types/cucumber": "^6.0.1",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.11",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.10.6",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.17.0",
    "@typescript-eslint/parser": "^6.17.0",
    "@vscode/test-electron": "^2.3.8",
    "eslint": "^8.56.0",
    "glob": "^10.3.10",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^16.2.3",
    "mocha": "^10.2.0",
    "nyc": "^17.1.0",
    "playwright": "^1.55.1",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix"
    ],
    "*.{json,md}": []
  }
}
